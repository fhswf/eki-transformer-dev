hydra:
  run:
    dir: modelflow/${now:%Y-%m-%d_%H\:%M\:%S}
  sweep:
    dir: modelflow/${now:%Y-%m-%d_%H\:%M\:%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params: null
  help:
    app_name: quantgpt
    header: == ${hydra.help.app_name} ==
    footer: Use --hydra-help to view Hydra specific help
    template: '${hydra.help.header}


      This is ${hydra.help.app_name}!


      $APP_CONFIG_GROUPS

      == Config ==

      This is the config generated for this run.

      python my_app.py cmd=train

      -------

      $CONFIG

      -------


      ${hydra.help.footer}'
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
      color:
        (): colorlog.LevelFormatter
        fmt:
          DEBUG: '[ %(cyan)s%(asctime)s %(reset)s][%(name)s, %(filename)s:%(lineno)d%(reset)s][%(log_color)s%(levelname)s%(reset)s]
            - %(message_log_color)s%(message)s%(reset)s'
          INFO: '[ %(cyan)s%(asctime)s %(reset)s][%(name)s, %(filename)s:%(lineno)d%(reset)s][%(log_color)s%(levelname)s%(reset)s]
            - %(message_log_color)s%(message)s%(reset)s'
          WARNING: '[ %(cyan)s%(asctime)s %(reset)s][%(name)s, %(filename)s:%(lineno)d%(reset)s][%(log_color)s%(levelname)s%(reset)s]
            - %(message_log_color)s%(message)s%(reset)s'
          ERROR: '[ %(cyan)s%(asctime)s %(reset)s][%(name)s, %(filename)s:%(lineno)d%(reset)s][%(log_color)s%(levelname)s%(reset)s
            %(pathname)s:%(lineno)d] - %(message_log_color)s%(message)s%(reset)s'
          CRITICAL: '[ %(cyan)s%(asctime)s %(reset)s][%(name)s, %(filename)s:%(lineno)d%(reset)s][%(log_color)s%(levelname)s%(reset)s
            %(pathname)s:%(lineno)d] - %(message_log_color)s%(message)s%(reset)s'
          TRACE: '[ %(cyan)s%(asctime)s %(reset)s][%(name)s, %(filename)s:%(lineno)d%(reset)s][%(log_color)s%(levelname)s%(reset)s]
            - %(message_log_color)s%(message)s%(reset)s'
        reset: true
        log_colors:
          TRACE: purple
          DEBUG: blue
          INFO: green
          WARNING: yellow
          ERROR: red
          CRITICAL: red,bg_white
        secondary_log_colors:
          message:
            TRACE: purple
            DEBUG: blue
            INFO: green
            WARNING: yellow
            ERROR: red
            CRITICAL: bold_red
    handlers:
      console:
        class: logging.StreamHandler
        formatter: color
        stream: ext://sys.stdout
      jobfile:
        class: logging.handlers.WatchedFileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/log.txt
    root:
      handlers:
      - console
      - jobfile
    disable_existing_loggers: false
  env: {}
  mode: RUN
  searchpath:
  - pkg://qtransform
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.mode=RUN
    task: []
  job:
    name: __main__
    chdir: null
    override_dirname: ''
    id: ???
    num: ???
    config_name: config.yaml
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.3'
    cwd: /home/kuhmichel/git/eki-transformer-dev/tmp
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /home/kuhmichel/git/eki-transformer-dev/modelflow/modelflow/conf
      schema: file
      provider: main
    - path: qtransform
      schema: pkg
      provider: hydra.searchpath in main
    - path: ''
      schema: structured
      provider: schema
    output_dir: /home/kuhmichel/git/eki-transformer-dev/tmp/modelflow/2025-01-10_11:24:38
    choices:
      quantization: default
      flow: default
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: perlevel
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: main
      hydra/sweeper: basic
      hydra/launcher: basic
      hydra/output: default
  verbose: false
